{"version":3,"sources":["store/reducers/market.reducer.js","store/store.js","cmps/AppHeader.jsx","services/database.service.js","services/btc.service.js","services/kraken.service.js","store/actions/market.actions.js","cmps/FilterApp.jsx","assets/img/star.svg","cmps/market-cmps/MarketInfo.jsx","cmps/market-cmps/MarketList.jsx","cmps/AppBoard.jsx","routes.js","pages/WatchList.jsx","App.jsx","index.js"],"names":["initialState","markets","watchlist","filterBy","rootReducer","combineReducers","marketModule","state","action","newState","type","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","AppHeader","memo","className","path","title","map","to","Button","style","borderRadius","backgroundColor","color","padding","variant","gDatabase","require","a","databaseService","query","btcMarkets","btcService","getBtcMarket","krakenMarkets","marketService","getKrakenMarket","loadMarkets","market","dispatch","console","log","AppFilter","useDispatch","useSelector","onSetFilter","target","err","setFilter","value","TextField","id","label","onChange","IconButton","onClick","component","Clear","MarketInfo","asset","lastPrice","change","volume","useState","isStar","setStar","changeClass","useMemo","prevState","updateWatchList","src","starSVg","alt","MarketList","imgSrcg","toLowerCase","length","AppBoard","match","marketsToDisaply","regex","RegExp","Object","keys","reduce","acc","filter","test","useEffect","params","kraken","routes","App","route","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87cd5ebe.chunk.js","sourcesContent":["const initialState = {\r\n    markets: [],\r\n    watchlist: [],\r\n    filterBy: ''\r\n}\r\nexport function marketReducer(state = initialState, action) {\r\n    var newState = state;\r\n    var watchlist = [];\r\n    switch (action.type) {\r\n        case 'SET_FILTER':\r\n            newState = { ...state, filterBy: action.filterBy }\r\n            break;\r\n        case 'SET_MARKETS':\r\n            newState = { ...state, markets: action.markets }\r\n            break;\r\n        case 'UPDATE_WATCHLIST':\r\n            newState = { ...state, watchlist }\r\n            break;\r\n        default:\r\n    }\r\n    return newState;\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nimport { marketReducer } from './reducers/market.reducer.js'\r\n\r\nconst rootReducer = combineReducers({\r\n    marketModule : marketReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n\r\n\r\n","import { memo } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Button } from '@material-ui/core'\r\n\r\nexport const AppHeader = memo(function _AppHeader() {\r\n    const routes = [\r\n        {\r\n            path: '/', title: 'BTC markets'\r\n        },\r\n        {\r\n            path: '/kraken', title: 'Kraken markets'\r\n        },\r\n        {\r\n            path: '/Watchlist', title: 'Watchlist'\r\n        }\r\n    ]\r\n    return (\r\n        <header className=\"app-header  main-layout\">\r\n            <nav className=\"btn-navs flex align-center gap\">\r\n                {routes.map(({ path, title }) => (\r\n                    <NavLink to={path} key={title}>\r\n                        <Button\r\n                            style={{\r\n                                borderRadius: 5,\r\n                                backgroundColor: \"navy\",\r\n                                color: \"white\",\r\n                                padding: \"0.6rem\",\r\n                            }}\r\n                            variant=\"contained\"\r\n                        >{title}</Button>\r\n                    </NavLink>\r\n                ))}\r\n            </nav>\r\n\r\n        </header>\r\n    )\r\n})","const gDatabase = require('../data/data.json');\r\n\r\nasync function query() {\r\n    return gDatabase\r\n}\r\n\r\nexport const databaseService = {\r\n    query\r\n}\r\n","import { databaseService } from './database.service';\r\n\r\nasync function getBtcMarket() {\r\n    const { btcMarkets } = await databaseService.query();\r\n    return btcMarkets;\r\n}\r\n\r\nexport const btcService = {\r\n    getBtcMarket\r\n}\r\n","import { databaseService } from './database.service';\r\n\r\nasync function getKrakenMarket() {\r\n    const { krakenMarkets } = await databaseService.query();\r\n    return krakenMarkets;\r\n}\r\n\r\n\r\nexport const marketService = {\r\n    getKrakenMarket\r\n}\r\n","import { btcService } from '../../services/btc.service';\r\nimport { marketService } from '../../services/kraken.service';\r\n\r\nexport function loadMarkets(market, filterBy = null) {\r\n    return async dispatch => {\r\n        try {\r\n            let markets = (market === 'kraken') ?\r\n                await marketService.getKrakenMarket(filterBy)\r\n                :\r\n                await btcService.getBtcMarket(filterBy)\r\n\r\n            dispatch({ type: 'SET_MARKETS', markets })\r\n        } catch (err) {\r\n            console.log('marketActions: err in loadMarkets', err)\r\n        }\r\n    }\r\n}\r\nexport function updateWatchList(asset) {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: 'UPDATE_WATCHLIST', asset })\r\n        } catch (err) {\r\n            console.log('marketActions: err in update', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function setFilter(filterBy) {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: 'SET_FILTER', filterBy })\r\n        } catch (err) {\r\n            console.log('Cannot set filter', err)\r\n        }\r\n    }\r\n}","import { useDispatch, useSelector } from 'react-redux'\r\nimport { setFilter } from '../store/actions/market.actions'\r\nimport { Clear } from '@material-ui/icons'\r\nimport { IconButton, TextField } from '@material-ui/core'\r\n\r\nexport const AppFilter = () => {\r\n    const dispatch = useDispatch()\r\n    const { filterBy } = useSelector(state => state.marketModule)\r\n\r\n    const onSetFilter = ({ target }) => {\r\n        dispatch(setFilter(target?.value || ''))\r\n    }\r\n\r\n    return (\r\n        <section className=\"app-filter flex align-center\">\r\n            <TextField\r\n                id=\"field-basic\"\r\n                label=\"Search\"\r\n                variant=\"outlined\"\r\n                value={filterBy}\r\n                style={{\r\n                    backgroundColor: \"navy\",\r\n                    color: \"white\",\r\n                    borderRadius: 5,\r\n\r\n                }}\r\n                onChange={onSetFilter}\r\n            />\r\n            <IconButton\r\n                className=\"icon-clear\"\r\n                onClick={onSetFilter}\r\n                style={{\r\n                    color: '#ffffff',\r\n                    borderRadius: '0px',\r\n                    padding: '8px'\r\n                }}\r\n                aria-label=\"clear search\"\r\n                component=\"span\"\r\n            >\r\n                <Clear />\r\n            </IconButton>\r\n        </section>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/star.da56886d.svg\";","import { useMemo, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateWatchList } from \"../../store/actions/market.actions\";\r\nimport starSVg from \"../../assets/img/star.svg\"\r\n\r\nexport const MarketInfo = ({ market }) => {\r\n    const { asset, lastPrice, change, volume } = market\r\n    const [isStar, setStar] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const toggleStar = () => {\r\n        setStar((prevState) => !prevState)\r\n        dispatch(updateWatchList(asset))\r\n    }\r\n    \r\n    const changeClass = useMemo(() => {\r\n        return change > 0 ? 'green' : 'red'\r\n    }, [change]);\r\n\r\n    return (\r\n        <section className={`market-info flex align-center  ${isStar ? 'marked' : ''}`}>\r\n            <span className=\"asset\">{asset}</span>\r\n            <span className=\"last-price\">{lastPrice}</span>\r\n            <span className={changeClass}>{change + '%'}</span>\r\n            <span className=\"volume\">{volume}</span>\r\n            <span className=\"flex justify-end\">\r\n                <img className={`star-svg ${isStar ? 'marked' : ''}`} onClick={toggleStar} src={starSVg} alt=\"\" />\r\n            </span>\r\n        </section >\r\n    )\r\n}","import { memo, useMemo } from 'react';\r\nimport { MarketInfo } from './MarketInfo';\r\n\r\nexport const MarketList = memo(function _MarketList({ markets, title }) {\r\n    const imgSrcg = useMemo(() => {\r\n        return `https://cdn.jsdelivr.net/gh/atomiclabs/cryptocurrency-icons@d5c68edec1f5eaec59ac77ff2b48144679cebca1/32/white/${title.toLowerCase()}.png`\r\n    }, [title]);\r\n\r\n\r\n    return (\r\n        <section className=\"market-list flex column\">\r\n            <div className=\"title-container flex alig-center gap\">\r\n                <img src={imgSrcg} alt=\"icon\" />\r\n                <h2 className=\"title\">{title}</h2>\r\n            </div>\r\n            {markets.length > 0 && markets.map(market => <MarketInfo\r\n                key={market.asset}\r\n                market={market}\r\n            />)}\r\n        </section>\r\n    )\r\n})","import { useEffect, useMemo } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { AppFilter } from \"./FilterApp\"\r\nimport { MarketList } from \"./market-cmps/MarketList\"\r\nimport { loadMarkets } from \"../store/actions/market.actions\"\r\n\r\nexport const AppBoard = ({ match }) => {\r\n    const { markets, filterBy } = useSelector(state => state.marketModule)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const marketsToDisaply = useMemo(() => {\r\n        if (!filterBy) return markets\r\n        const regex = new RegExp(filterBy, 'i');\r\n        return Object.keys(markets).reduce((acc, title) => {\r\n            acc[title] = markets[title].filter(market => regex.test(market.asset))\r\n            return acc;\r\n        }, {})\r\n\r\n    }, [filterBy, markets])\r\n\r\n    useEffect(() => {\r\n        const { params } = match\r\n        if (params.kraken) dispatch(loadMarkets(params.kraken))\r\n        else if (match.path === '/') dispatch(loadMarkets('btc'))\r\n    }, [match])\r\n\r\n    return (\r\n        <section className=\"app-board flex column gap\">\r\n            <AppFilter />\r\n            {Object.keys(marketsToDisaply).map(title => (\r\n                <MarketList key={title} markets={marketsToDisaply[title]} title={title} />\r\n            ))}\r\n        </section>\r\n    )\r\n}","import { AppBoard } from './cmps/AppBoard';\r\nimport { WatchList } from './pages/WatchList';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        component: AppBoard,\r\n    },\r\n    {\r\n        path: '/watchlist',\r\n        component: WatchList,\r\n    },\r\n    {\r\n        path: '/:kraken',\r\n        component: AppBoard,\r\n    },\r\n\r\n]\r\n\r\nexport default routes;","export const WatchList = ({ }) => {\r\n    return (\r\n        <section className=\"watch-list flex column \">\r\n            <h1>Watch List</h1>\r\n        </section>\r\n    )\r\n}","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Switch, Route } from 'react-router'\r\nimport { AppHeader } from './cmps/AppHeader';\r\nimport { loadMarkets } from './store/actions/market.actions.js';\r\nimport routes from './routes.js'\r\n\r\nexport function App() {\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(loadMarkets('btc'));\r\n  }, [])\r\n\r\n  return (\r\n    <section className=\"app flex column\">\r\n      <AppHeader />\r\n      <main className=\"main-layout\">\r\n        <Switch>\r\n          {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\r\n        </Switch>\r\n      </main>\r\n    </section>\r\n  )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom'\nimport { store } from './store/store'\nimport { App } from './App.jsx';\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}